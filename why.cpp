
//__declspec(dllexport) char text[] = "You are winner";

/*
#include <stdint.h>

struct WorstZUNRng {
	uint32_t seed;
	uint32_t count;

	__forceinline uint32_t __thiscall this_is_awful() {
		uint32_t immediate4;
		__asm__(
			".byte 0x0F,0xA0,0xD9,0x3C,0x24,0x0F,0x77,0xDB,0xE2,0xDF,0xC6,0xDF,0xE0,0x0F,0xAC,0xC2,0xC1,0xDB,0xE3,0xD9,0x04,0x24,0xDF,0xE0,0x0F,0xAC,0xC2,0x41,0xDB,0xE3,0xD8,0xE3,0xDF,0xE0,0x0F,0xAC,0xC2,0x21,0xDB,0xE2,0x0F,0x77,0xDD,0xC6,0xDF,0xE0,0x0F,0xAC,0xC2,0xE1,0x0F,0x77,0xDB,0xE2,0xD9,0xED,0xDF,0xE0,0x0F,0xAC,0xC2,0x41,0xDB,0xE3,0xDF,0xC5,0xDF,0xE0,0x0F,0xAC,0xC2,0x21,0xDB,0xE3,0xD9,0xDC,0xDF,0xE0,0x0F,0xAC,0xC2,0xC1,0xDB,0xE3,0xD9,0xF7,0xDF,0xE0,0x0F,0xAC,0xC2,0x01,0xDB,0xE3,0xDF,0xC2,0xDF,0xE0,0x0F,0xAC,0xC2,0xA1,0xDB,0xE3,0xD9,0xDA,0xDF,0xE0,0x0F,0xAC,0xC2,0x61,0xDB,0xE2,0x0F,0x77,0xD9,0xD8,0xDF,0xE0,0x0F,0xAC,0xC2,0xC1,0xDB,0xE2,0x0F,0x77,0xD9,0xD9,0xDF,0xE0,0x0F,0xAC,0xC2,0xE1,0xDB,0xE3,0xDB,0xE0,0xDF,0xE0,0x0F,0xAC,0xC2,0x61,0xDB,0xE3,0xD9,0xE5,0xDF,0xE0,0x0F,0xAC,0xC2,0x41,0xDB,0xE2,0x0F,0x77,0xDF,0xC2,0xDF,0xE0,0x0F,0xAC,0xC2,0x41,0xDB,0xE3,0xD9,0xE9,0xDF,0xE0,0x0F,0xAC,0xC2,0x81,0xDB,0xE3,0xD9,0xDB,0xDF,0xE0,0x0F,0xAC,0xC2,0xA1,0x0F,0x77,0xDB,0xE2,0xDF,0xC5,0xDF,0xE0,0x0F,0xAC,0xC2,0xA1,0xDB,0xE3,0xDD,0xC3,0xDF,0xE0,0x0F,0xAC,0xC2,0xC1,0xDB,0xE3,0xD9,0xDF,0xDF,0xE0,0x0F,0xAC,0xC2,0xE1,0xDB,0xE3,0xDD,0xC5,0xDF,0xE0,0x0F,0xAC,0xC2,0xC1,0x0F,0x77,0xDB,0xE2,0xDB,0xE4,0xDF,0xE0,0x0F,0xAC,0xC2,0xC1,0xDB,0xE3,0xD9,0xEA,0xDF,0xE0,0x0F,0xAC,0xC2,0xA1,0x0F,0x77,0xDB,0xE2,0xDD,0xC2,0xDF,0xE0,0x0F,0xAC,0xC2,0x61,0xDB,0xE3,0xDF,0xC3,0xDF,0xE0,0x0F,0xAC,0xC2,0x01,0xDB,0xE2,0x0F,0x77,0xDD,0xC0,0xDF,0xE0,0x0F,0xAC,0xC2,0x21,0xDB,0xE3,0xDD,0xC3,0xDF,0xE0,0x0F,0xAC,0xC2,0x41,0x0F,0x77,0xDB,0xE2,0xD9,0xDB,0xDF,0xE0,0x0F,0xAC,0xC2,0x61,0x0F,0x77,0xDB,0xE2,0xDF,0xC2,0xDF,0xE0,0x0F,0xAC,0xC2,0x21,0xDB,0xE3,0xDF,0xC5,0xDF,0xE0,0x0F,0xAC,0xC2,0xA1,0x0F,0x77,0xDB,0xE2,0xD9,0xE5,0xDF,0xE0,0x0F,0xAC,0xC2,0xE1,0xDB,0xE3,0xD9,0xDF,0xDF,0xE0,0x0F,0xAC,0xC2,0xE1,0x89,0xD0,0xD9,0x2C,0x24,0x5A"
			: "=a"(immediate4)
			:
			: "edx"
		);
		uint32_t immediate2A;
		__asm__(
			".byte 0x0F,0xA0,0xD9,0x3C,0x24,0xDB,0xE3,0xDF,0xC5,0xDF,0xE0,0x0F,0xAC,0xC2,0x41,0xDB,0xE2,0x0F,0x77,0xD8,0xD1,0xDF,0xE0,0x0F,0xAC,0xC2,0x01,0xDB,0xE3,0xDF,0xC4,0xDF,0xE0,0x0F,0xAC,0xC2,0x61,0xDB,0xE2,0x0F,0x77,0xD9,0xEB,0xDF,0xE0,0x0F,0xAC,0xC2,0xC1,0xDB,0xE3,0xDF,0xC1,0xDF,0xE0,0x0F,0xAC,0xC2,0x61,0xDB,0xE2,0x0F,0x77,0xD9,0xDC,0xDF,0xE0,0x0F,0xAC,0xC2,0x41,0xDB,0xE3,0xDF,0xC6,0xDF,0xE0,0x0F,0xAC,0xC2,0x01,0x0F,0x77,0xDB,0xE2,0xD9,0x04,0x24,0xDF,0xE0,0x0F,0xAC,0xC2,0x21,0xDB,0xE3,0xDB,0xE4,0xDF,0xE0,0x0F,0xAC,0xC2,0x01,0x0F,0x77,0xDB,0xE2,0xDB,0xE1,0xDF,0xE0,0x0F,0xAC,0xC2,0xE1,0xDB,0xE2,0x0F,0x77,0xDF,0xC6,0xDF,0xE0,0x0F,0xAC,0xC2,0xC1,0x0F,0x77,0xDB,0xE2,0xD9,0xF7,0xDF,0xE0,0x0F,0xAC,0xC2,0xA1,0xDB,0xE3,0xDB,0x04,0x24,0xDF,0xE0,0x0F,0xAC,0xC2,0x21,0xDB,0xE2,0x0F,0x77,0xDD,0xC6,0xDF,0xE0,0x0F,0xAC,0xC2,0x01,0xDB,0xE3,0xD9,0xDE,0xDF,0xE0,0x0F,0xAC,0xC2,0xA1,0x0F,0x77,0xDB,0xE2,0xD9,0xDD,0xDF,0xE0,0x0F,0xAC,0xC2,0x21,0x0F,0x77,0xDB,0xE2,0xDD,0xC2,0xDF,0xE0,0x0F,0xAC,0xC2,0xC1,0x0F,0x77,0xDB,0xE2,0xD9,0x04,0x24,0xDF,0xE0,0x0F,0xAC,0xC2,0xE1,0xDB,0xE2,0x0F,0x77,0xD9,0xD0,0xDF,0xE0,0x0F,0xAC,0xC2,0xE1,0xDB,0xE2,0x0F,0x77,0xDD,0xC6,0xDF,0xE0,0x0F,0xAC,0xC2,0xE1,0xDB,0xE3,0xDB,0xE4,0xDF,0xE0,0x0F,0xAC,0xC2,0x01,0x0F,0x77,0xDB,0xE2,0xDD,0xC5,0xDF,0xE0,0x0F,0xAC,0xC2,0x81,0xDB,0xE2,0x0F,0x77,0xD9,0xE9,0xDF,0xE0,0x0F,0xAC,0xC2,0x41,0xDB,0xE3,0xDB,0xE0,0xDF,0xE0,0x0F,0xAC,0xC2,0x01,0xDB,0xE3,0xDF,0xC2,0xDF,0xE0,0x0F,0xAC,0xC2,0xE1,0xDB,0xE2,0x0F,0x77,0xDB,0x04,0x24,0xDF,0xE0,0x0F,0xAC,0xC2,0x01,0xDB,0xE3,0xD9,0x04,0x24,0xDF,0xE0,0x0F,0xAC,0xC2,0x41,0xDB,0xE3,0xD9,0xF6,0xDF,0xE0,0x0F,0xAC,0xC2,0xE1,0x0F,0x77,0xDB,0xE2,0xD9,0x04,0x24,0xDF,0xE0,0x0F,0xAC,0xC2,0x81,0xDB,0xE2,0x0F,0x77,0xD9,0xDC,0xDF,0xE0,0x0F,0xAC,0xC2,0xC1,0xDB,0xE2,0x0F,0x77,0xD9,0xED,0xDF,0xE0,0x0F,0xAC,0xC2,0x81,0x0F,0x77,0xDB,0xE2,0xDF,0xC7,0xDF,0xE0,0x0F,0xAC,0xC2,0x81,0x89,0xD0,0xD9,0x2C,0x24,0x5A"
			: "=a"(immediate2A)
			:
			: "edx"
		);
		*(uint32_t*)((uintptr_t)this + immediate4) += immediate2A;
		uint32_t rng_const1;
		__asm__(
			".byte 0x0F,0xA0,0xD9,0x3C,0x24,0x0F,0x77,0xDB,0xE2,0xDF,0xC3,0xDF,0xE0,0x0F,0xAC,0xC2,0x81,0xDB,0xE2,0x0F,0x77,0xDD,0xC7,0xDF,0xE0,0x0F,0xAC,0xC2,0x61,0xDB,0xE3,0xD9,0xD0,0xDF,0xE0,0x0F,0xAC,0xC2,0x81,0xDB,0xE2,0x0F,0x77,0xDF,0xC4,0xDF,0xE0,0x0F,0xAC,0xC2,0xE1,0xDB,0xE2,0x0F,0x77,0xDC,0xE1,0xDF,0xE0,0x0F,0xAC,0xC2,0x41,0x0F,0x77,0xDB,0xE2,0xDB,0xF1,0xDF,0xE0,0x0F,0xAC,0xC2,0x01,0xDB,0xE3,0xDD,0xC2,0xDF,0xE0,0x0F,0xAC,0xC2,0x21,0xDB,0xE3,0xD9,0xE9,0xDF,0xE0,0x0F,0xAC,0xC2,0xE1,0xDB,0xE3,0xDB,0xE1,0xDF,0xE0,0x0F,0xAC,0xC2,0x21,0x0F,0x77,0xDB,0xE2,0xD8,0x1C,0x24,0xDF,0xE0,0x0F,0xAC,0xC2,0x61,0xDB,0xE3,0xDE,0x24,0x24,0xDF,0xE0,0x0F,0xAC,0xC2,0x81,0xDB,0xE3,0xDF,0xC6,0xDF,0xE0,0x0F,0xAC,0xC2,0xA1,0xDB,0xE3,0xDA,0xC0,0xDF,0xE0,0x0F,0xAC,0xC2,0xC1,0xDB,0xE3,0xDD,0xC4,0xDF,0xE0,0x0F,0xAC,0xC2,0x81,0x0F,0x77,0xDB,0xE2,0xD9,0xD9,0xDF,0xE0,0x0F,0xAC,0xC2,0xC1,0x0F,0x77,0xDB,0xE2,0xDF,0xD8,0xDF,0xE0,0x0F,0xAC,0xC2,0xA1,0xDB,0xE3,0xDC,0xD3,0xDF,0xE0,0x0F,0xAC,0xC2,0x81,0xDB,0xE3,0xDD,0xEA,0xDF,0xE0,0x0F,0xAC,0xC2,0x41,0xDB,0xE2,0x0F,0x77,0xDE,0xF2,0xDF,0xE0,0x0F,0xAC,0xC2,0xA1,0xDB,0xE3,0xDC,0xFD,0xDF,0xE0,0x0F,0xAC,0xC2,0x01,0xDB,0xE3,0xDE,0xD3,0xDF,0xE0,0x0F,0xAC,0xC2,0x41,0xDB,0xE3,0xDE,0xF0,0xDF,0xE0,0x0F,0xAC,0xC2,0xA1,0xDB,0xE3,0xDE,0xC6,0xDF,0xE0,0x0F,0xAC,0xC2,0x41,0xDB,0xE3,0xD8,0xEE,0xDF,0xE0,0x0F,0xAC,0xC2,0xE1,0xDB,0xE3,0xDA,0xC8,0xDF,0xE0,0x0F,0xAC,0xC2,0x41,0xDB,0xE2,0x0F,0x77,0xDB,0xC8,0xDF,0xE0,0x0F,0xAC,0xC2,0x81,0x0F,0x77,0xDB,0xE2,0xDF,0xDC,0xDF,0xE0,0x0F,0xAC,0xC2,0x61,0xDB,0xE3,0xDE,0x0C,0x24,0xDF,0xE0,0x0F,0xAC,0xC2,0x21,0x0F,0x77,0xDB,0xE2,0xDC,0xED,0xDF,0xE0,0x0F,0xAC,0xC2,0x01,0xDB,0xE2,0x0F,0x77,0xDC,0xDD,0xDF,0xE0,0x0F,0xAC,0xC2,0xE1,0x0F,0x77,0xDB,0xE2,0xDF,0xF1,0xDF,0xE0,0x0F,0xAC,0xC2,0x81,0x0F,0x77,0xDB,0xE2,0xDD,0xED,0xDF,0xE0,0x0F,0xAC,0xC2,0x81,0x89,0xD0,0xD9,0x2C,0x24,0x5A"
			: "=a"(rng_const1)
			:
			: "edx"
		);
		rng_const1 ^= this->seed;
		uint32_t rng_const2;
		__asm__(
			".byte 0x0F,0xA0,0xD9,0x3C,0x24,0x0F,0x77,0xDB,0xE2,0xD8,0xC7,0xDF,0xE0,0x0F,0xAC,0xC2,0xE1,0xDB,0xE2,0x0F,0x77,0xD9,0xE5,0xDF,0xE0,0x0F,0xAC,0xC2,0x41,0xDB,0xE3,0xDB,0xC0,0xDF,0xE0,0x0F,0xAC,0xC2,0x61,0xDB,0xE2,0x0F,0x77,0xD8,0xF2,0xDF,0xE0,0x0F,0xAC,0xC2,0x01,0x0F,0x77,0xDB,0xE2,0xD9,0xEE,0xDF,0xE0,0x0F,0xAC,0xC2,0x01,0xDB,0xE2,0x0F,0x77,0xDF,0xDD,0xDF,0xE0,0x0F,0xAC,0xC2,0x21,0xDB,0xE3,0xD9,0xEA,0xDF,0xE0,0x0F,0xAC,0xC2,0x01,0xDB,0xE3,0xDA,0xDB,0xDF,0xE0,0x0F,0xAC,0xC2,0xA1,0xDB,0xE2,0x0F,0x77,0xDB,0xE0,0xDF,0xE0,0x0F,0xAC,0xC2,0x61,0xDB,0xE3,0xDA,0xDC,0xDF,0xE0,0x0F,0xAC,0xC2,0x81,0xDB,0xE3,0xDF,0xC2,0xDF,0xE0,0x0F,0xAC,0xC2,0xA1,0x0F,0x77,0xDB,0xE2,0xDA,0xC5,0xDF,0xE0,0x0F,0xAC,0xC2,0xC1,0x0F,0x77,0xDB,0xE2,0xDC,0xE8,0xDF,0xE0,0x0F,0xAC,0xC2,0xC1,0xDB,0xE3,0xD9,0xDD,0xDF,0xE0,0x0F,0xAC,0xC2,0x81,0xDB,0xE2,0x0F,0x77,0xD9,0xE5,0xDF,0xE0,0x0F,0xAC,0xC2,0x21,0x0F,0x77,0xDB,0xE2,0xDC,0xE3,0xDF,0xE0,0x0F,0xAC,0xC2,0xE1,0xDB,0xE3,0xD8,0xCD,0xDF,0xE0,0x0F,0xAC,0xC2,0x21,0xDB,0xE3,0xD8,0xF6,0xDF,0xE0,0x0F,0xAC,0xC2,0xA1,0xDB,0xE3,0xDB,0xC7,0xDF,0xE0,0x0F,0xAC,0xC2,0xA1,0x0F,0x77,0xDB,0xE2,0xD9,0xCD,0xDF,0xE0,0x0F,0xAC,0xC2,0x61,0xDB,0xE3,0xD8,0xFB,0xDF,0xE0,0x0F,0xAC,0xC2,0xC1,0xDB,0xE3,0xDE,0xD4,0xDF,0xE0,0x0F,0xAC,0xC2,0x21,0xDB,0xE2,0x0F,0x77,0xDA,0xD8,0xDF,0xE0,0x0F,0xAC,0xC2,0x81,0xDB,0xE3,0xDA,0xCF,0xDF,0xE0,0x0F,0xAC,0xC2,0x21,0xDB,0xE2,0x0F,0x77,0xDD,0xE5,0xDF,0xE0,0x0F,0xAC,0xC2,0x21,0x0F,0x77,0xDB,0xE2,0xDE,0xCE,0xDF,0xE0,0x0F,0xAC,0xC2,0xA1,0xDB,0xE2,0x0F,0x77,0xDE,0xCA,0xDF,0xE0,0x0F,0xAC,0xC2,0xE1,0xDB,0xE2,0x0F,0x77,0xD8,0xC7,0xDF,0xE0,0x0F,0xAC,0xC2,0x01,0xDB,0xE3,0xD8,0xCF,0xDF,0xE0,0x0F,0xAC,0xC2,0xC1,0xDB,0xE2,0x0F,0x77,0xD8,0xE2,0xDF,0xE0,0x0F,0xAC,0xC2,0xA1,0xDB,0xE3,0xDF,0xE8,0xDF,0xE0,0x0F,0xAC,0xC2,0x61,0xDB,0xE3,0xD8,0xD3,0xDF,0xE0,0x0F,0xAC,0xC2,0xA1,0x89,0xD0,0xD9,0x2C,0x24,0x5A"
			: "=a"(rng_const2)
			:
			: "edx"
		);
		rng_const1 += rng_const2;
		uint8_t shift_const1;
		__asm__(
			".byte 0x0F,0xA0,0xD9,0x3C,0x24,0xDB,0xE3,0xDB,0xE0,0xDF,0xE0,0xC1,0xC8,0x41,0xDB,0xE3,0xDE,0xF3,0xDF,0xE0,0xC1,0xC8,0xC1,0xDB,0xE2,0x0F,0x77,0xDD,0xC3,0xDF,0xE0,0xC1,0xC8,0xA1,0xDB,0xE3,0xD9,0xE5,0xDF,0xE0,0xC1,0xC8,0x21,0xDB,0xE3,0xDF,0xC1,0xDF,0xE0,0xC1,0xC8,0xE1,0xDB,0xE2,0x0F,0x77,0xD9,0xF7,0xDF,0xE0,0xC1,0xC8,0xA1,0x0F,0x77,0xDB,0xE2,0xDF,0xC3,0xDF,0xE0,0xC1,0xC8,0xE1,0x0F,0x77,0xDB,0xE2,0xD9,0xDA,0xDF,0xE0,0xC1,0xC8,0xE1,0xC1,0xF8,0x98,0xD9,0x2C,0x24,0x5A"
			: "=a"(shift_const1)
			:
			: "edx"
		);
		uint32_t temp1 = rng_const1;
		*(uint16_t*)&temp1 = __builtin_rotateleft16(temp1, shift_const1);
		uint32_t rng_const3;
		__asm__(
			".byte 0x0F,0xA0,0xD9,0x3C,0x24,0xDB,0xE2,0x0F,0x77,0xDF,0xC6,0xDF,0xE0,0x0F,0xAC,0xC2,0x61,0xDB,0xE3,0xDD,0xC2,0xDF,0xE0,0x0F,0xAC,0xC2,0x21,0xDB,0xE3,0xD9,0xEB,0xDF,0xE0,0x0F,0xAC,0xC2,0x21,0xDB,0xE3,0xDF,0xC0,0xDF,0xE0,0x0F,0xAC,0xC2,0xA1,0xDB,0xE2,0x0F,0x77,0xDC,0xC6,0xDF,0xE0,0x0F,0xAC,0xC2,0x61,0x0F,0x77,0xDB,0xE2,0xDA,0xC5,0xDF,0xE0,0x0F,0xAC,0xC2,0x41,0xDB,0xE2,0x0F,0x77,0xD9,0xED,0xDF,0xE0,0x0F,0xAC,0xC2,0xA1,0xDB,0xE2,0x0F,0x77,0xDF,0xC4,0xDF,0xE0,0x0F,0xAC,0xC2,0x41,0xDB,0xE3,0xD9,0x04,0x24,0xDF,0xE0,0x0F,0xAC,0xC2,0x61,0xDB,0xE2,0x0F,0x77,0xDB,0xC0,0xDF,0xE0,0x0F,0xAC,0xC2,0xC1,0x0F,0x77,0xDB,0xE2,0xDB,0xC4,0xDF,0xE0,0x0F,0xAC,0xC2,0xE1,0xDB,0xE3,0xD9,0xD9,0xDF,0xE0,0x0F,0xAC,0xC2,0x01,0xDB,0xE3,0xD9,0xC4,0xDF,0xE0,0x0F,0xAC,0xC2,0xA1,0x0F,0x77,0xDB,0xE2,0xD9,0xDE,0xDF,0xE0,0x0F,0xAC,0xC2,0xE1,0xDB,0xE2,0x0F,0x77,0xDB,0x04,0x24,0xDF,0xE0,0x0F,0xAC,0xC2,0xA1,0xDB,0xE2,0x0F,0x77,0xDE,0x04,0x24,0xDF,0xE0,0x0F,0xAC,0xC2,0x01,0x0F,0x77,0xDB,0xE2,0xDC,0xC1,0xDF,0xE0,0x0F,0xAC,0xC2,0x41,0xDB,0xE3,0xD9,0xCF,0xDF,0xE0,0x0F,0xAC,0xC2,0xC1,0xDB,0xE3,0xDE,0xF6,0xDF,0xE0,0x0F,0xAC,0xC2,0x01,0xDB,0xE3,0xD8,0xC2,0xDF,0xE0,0x0F,0xAC,0xC2,0xA1,0xDB,0xE3,0xDC,0xF5,0xDF,0xE0,0x0F,0xAC,0xC2,0xC1,0x0F,0x77,0xDB,0xE2,0xDF,0xD9,0xDF,0xE0,0x0F,0xAC,0xC2,0x41,0xDB,0xE2,0x0F,0x77,0xDC,0xF6,0xDF,0xE0,0x0F,0xAC,0xC2,0xE1,0x0F,0x77,0xDB,0xE2,0xDA,0x34,0x24,0xDF,0xE0,0x0F,0xAC,0xC2,0xA1,0x0F,0x77,0xDB,0xE2,0xDF,0xEA,0xDF,0xE0,0x0F,0xAC,0xC2,0xC1,0xDB,0xE3,0xDF,0xDD,0xDF,0xE0,0x0F,0xAC,0xC2,0xC1,0xDB,0xE2,0x0F,0x77,0xDC,0xD4,0xDF,0xE0,0x0F,0xAC,0xC2,0x81,0xDB,0xE3,0xDA,0xCF,0xDF,0xE0,0x0F,0xAC,0xC2,0xA1,0x0F,0x77,0xDB,0xE2,0xD8,0xC9,0xDF,0xE0,0x0F,0xAC,0xC2,0xC1,0xDB,0xE3,0xDC,0xF5,0xDF,0xE0,0x0F,0xAC,0xC2,0x81,0xDB,0xE3,0xDB,0xC0,0xDF,0xE0,0x0F,0xAC,0xC2,0x01,0x0F,0x77,0xDB,0xE2,0xDB,0xEF,0xDF,0xE0,0x0F,0xAC,0xC2,0x61,0x89,0xD0,0xD9,0x2C,0x24,0x5A"
			: "=a"(rng_const3)
			:
			: "edx"
		);
		temp1 ^= rng_const3;
		uint32_t rng_const4;
		__asm__(
			".byte 0x0F,0xA0,0xD9,0x3C,0x24,0xDB,0xE2,0x0F,0x77,0xD9,0xCE,0xDF,0xE0,0x0F,0xAC,0xC2,0xE1,0xDB,0xE3,0xD9,0xEC,0xDF,0xE0,0x0F,0xAC,0xC2,0x61,0xDB,0xE2,0x0F,0x77,0xDF,0xCF,0xDF,0xE0,0x0F,0xAC,0xC2,0xE1,0x0F,0x77,0xDB,0xE2,0xD8,0xC1,0xDF,0xE0,0x0F,0xAC,0xC2,0xA1,0x0F,0x77,0xDB,0xE2,0xDF,0xC4,0xDF,0xE0,0x0F,0xAC,0xC2,0x01,0xDB,0xE3,0xDD,0xD6,0xDF,0xE0,0x0F,0xAC,0xC2,0xC1,0xDB,0xE2,0x0F,0x77,0xDF,0xC2,0xDF,0xE0,0x0F,0xAC,0xC2,0xC1,0xDB,0xE3,0xDB,0xD7,0xDF,0xE0,0x0F,0xAC,0xC2,0x01,0x0F,0x77,0xDB,0xE2,0xDF,0xC7,0xDF,0xE0,0x0F,0xAC,0xC2,0xC1,0xDB,0xE2,0x0F,0x77,0xDC,0xFD,0xDF,0xE0,0x0F,0xAC,0xC2,0x01,0xDB,0xE3,0xDF,0xC5,0xDF,0xE0,0x0F,0xAC,0xC2,0x41,0xDB,0xE3,0xDE,0x2C,0x24,0xDF,0xE0,0x0F,0xAC,0xC2,0xA1,0xDB,0xE3,0xDC,0xC2,0xDF,0xE0,0x0F,0xAC,0xC2,0x21,0xDB,0xE3,0xD9,0xDD,0xDF,0xE0,0x0F,0xAC,0xC2,0x41,0xDB,0xE2,0x0F,0x77,0xDF,0xC5,0xDF,0xE0,0x0F,0xAC,0xC2,0x41,0xDB,0xE3,0xDA,0x34,0x24,0xDF,0xE0,0x0F,0xAC,0xC2,0xA1,0xDB,0xE3,0xDB,0xDD,0xDF,0xE0,0x0F,0xAC,0xC2,0x41,0x0F,0x77,0xDB,0xE2,0xDD,0xEF,0xDF,0xE0,0x0F,0xAC,0xC2,0x01,0xDB,0xE3,0xDA,0xC9,0xDF,0xE0,0x0F,0xAC,0xC2,0xC1,0x0F,0x77,0xDB,0xE2,0xDB,0xC0,0xDF,0xE0,0x0F,0xAC,0xC2,0x61,0xDB,0xE3,0xDE,0xE2,0xDF,0xE0,0x0F,0xAC,0xC2,0xC1,0xDB,0xE3,0xDB,0xC4,0xDF,0xE0,0x0F,0xAC,0xC2,0x21,0xDB,0xE2,0x0F,0x77,0xDB,0xDD,0xDF,0xE0,0x0F,0xAC,0xC2,0x41,0xDB,0xE2,0x0F,0x77,0xD8,0xDF,0xDF,0xE0,0x0F,0xAC,0xC2,0x81,0x0F,0x77,0xDB,0xE2,0xD9,0xE1,0xDF,0xE0,0x0F,0xAC,0xC2,0xA1,0xDB,0xE3,0xDC,0xD2,0xDF,0xE0,0x0F,0xAC,0xC2,0x41,0x0F,0x77,0xDB,0xE2,0xDD,0xEA,0xDF,0xE0,0x0F,0xAC,0xC2,0xA1,0xDB,0xE3,0xDF,0xCF,0xDF,0xE0,0x0F,0xAC,0xC2,0x41,0x0F,0x77,0xDB,0xE2,0xDB,0xC1,0xDF,0xE0,0x0F,0xAC,0xC2,0x01,0x0F,0x77,0xDB,0xE2,0xDD,0xD5,0xDF,0xE0,0x0F,0xAC,0xC2,0x81,0xDB,0xE2,0x0F,0x77,0xDC,0xCE,0xDF,0xE0,0x0F,0xAC,0xC2,0xC1,0xDB,0xE3,0xD8,0xEB,0xDF,0xE0,0x0F,0xAC,0xC2,0x21,0x89,0xD0,0xD9,0x2C,0x24,0x5A"
			: "=a"(rng_const4)
			:
			: "edx"
		);
		temp1 += rng_const4;
		uint8_t shift_const2;
		__asm__(
			".byte 0x0F,0xA0,0xD9,0x3C,0x24,0xDB,0xE2,0x0F,0x77,0xD9,0xED,0xDF,0xE0,0xC1,0xC8,0x61,0xDB,0xE2,0x0F,0x77,0xDB,0xEE,0xDF,0xE0,0xC1,0xC8,0xC1,0x0F,0x77,0xDB,0xE2,0xDF,0xC5,0xDF,0xE0,0xC1,0xC8,0x81,0xDB,0xE2,0x0F,0x77,0xDF,0xC2,0xDF,0xE0,0xC1,0xC8,0x81,0xDB,0xE2,0x0F,0x77,0xDF,0xC6,0xDF,0xE0,0xC1,0xC8,0x61,0xDB,0xE2,0x0F,0x77,0xDF,0xDA,0xDF,0xE0,0xC1,0xC8,0x81,0xDB,0xE3,0xD8,0x2C,0x24,0xDF,0xE0,0xC1,0xC8,0xC1,0xDB,0xE3,0xD8,0xFE,0xDF,0xE0,0xC1,0xC8,0x21,0xC1,0xF8,0x58,0xD9,0x2C,0x24,0x5A"
			: "=a"(shift_const2)
			:
			: "edx"
		);
		*(uint16_t*)&this->seed = __builtin_rotateleft16(temp1, shift_const2);
		uint8_t shift_const3;
		__asm__(
			".byte 0x0F,0xA0,0xD9,0x3C,0x24,0x0F,0x77,0xDB,0xE2,0xDF,0xC5,0xDF,0xE0,0xC1,0xC8,0xE1,0xDB,0xE3,0xD9,0xF6,0xDF,0xE0,0xC1,0xC8,0xA1,0xDB,0xE3,0xDD,0xC7,0xDF,0xE0,0xC1,0xC8,0xE1,0xDB,0xE3,0xDD,0xC0,0xDF,0xE0,0xC1,0xC8,0xC1,0xDB,0xE3,0xDE,0xC8,0xDF,0xE0,0xC1,0xC8,0x81,0xDB,0xE2,0x0F,0x77,0xDB,0x04,0x24,0xDF,0xE0,0xC1,0xC8,0x81,0xDB,0xE2,0x0F,0x77,0xDC,0xDB,0xDF,0xE0,0xC1,0xC8,0x41,0xDB,0xE2,0x0F,0x77,0xD9,0xEB,0xDF,0xE0,0xC1,0xC8,0x21,0xC1,0xF8,0x58,0xD9,0x2C,0x24,0x5A"
			: "=a"(shift_const3)
			:
			: "edx"
		);
		return (uint16_t)temp1 | rng_const1 << shift_const3;
	}
};

static __forceinline uint64_t rdtsc(void) {
	uint64_t tick;
	__asm__ volatile (
		"RDTSC"
		: "=A"(tick)
		);
	return tick;
}

WorstZUNRng worst_rng;
*/

int yeet() {
	//worst_rng.seed = (uint16_t)rdtsc();
	//return worst_rng.this_is_awful();
	//return (int)text;
	return 0;
}


#if CUSTOM_CLANG
#define CS_RELATIVE __attribute__((address_space(259)))
#define DS_RELATIVE __attribute__((address_space(260)))
#define ES_RELATIVE __attribute__((address_space(261)))
#endif

#if CUSTOM_CLANG
__declspec(dllexport) int __fastcall read_es_ptr(int ES_RELATIVE* ptr) {
	return *ptr;
}

register unsigned short FS asm("fs");

__declspec(dllexport) void write_fs_zero() {
	FS = 0;
}

__declspec(dllexport) void write_fs_imm8() {
	FS = 69;
}

__declspec(dllexport) void write_es_imm16() {
	FS = 420;
}

__declspec(dllexport) void __fastcall write_fs_short(unsigned short value) {
	FS = value;
}

__declspec(dllexport) void __fastcall write_fs_int(unsigned int value) {
	FS = value;
}

__declspec(dllexport) void __fastcall write_fs_long(unsigned long long value) {
	FS = value;
}

__declspec(dllexport) void __fastcall write_fs_short_mem(unsigned short* ptr) {
	FS = *ptr;
}

__declspec(dllexport) void __fastcall write_fs_int_mem(unsigned int* ptr) {
	FS = *ptr;
}

__declspec(dllexport) void __fastcall write_fs_long_mem(unsigned long long* ptr) {
	FS = *ptr;
}

__declspec(dllexport) unsigned short read_fs_short() {
	return FS;
}

__declspec(dllexport) unsigned int read_fs_int() {
	return FS;
}

__declspec(dllexport) unsigned long long read_fs_long() {
	return FS;
}

__declspec(dllexport) void __fastcall read_fs_short_ptr(unsigned short* ptr) {
	*ptr = FS;
}

__declspec(dllexport) void __fastcall read_fs_int_ptr(unsigned int* ptr) {
	*ptr = FS;
}

__declspec(dllexport) void __fastcall read_fs_long_ptr(unsigned long long* ptr) {
	*ptr = FS;
}

__declspec(dllexport) volatile unsigned short short_vol = 0;
__declspec(dllexport) __declspec(noinline) void __stdcall short_stack_func(
#if __x86_64__
	int, int, int, int,
#endif
	unsigned short value
) {
	short_vol = value;
}

__declspec(dllexport) volatile unsigned int int_vol = 0;
__declspec(dllexport) __declspec(noinline) void __stdcall int_stack_func(
#if __x86_64__
	int, int, int, int,
#endif
	unsigned int value
) {
	int_vol = value;
}

__declspec(dllexport) volatile unsigned long long long_vol = 0;
__declspec(dllexport) __declspec(noinline) void __stdcall long_stack_func(
#if __x86_64__
	int, int, int, int,
#endif
	unsigned long long value
) {
	long_vol = value;
}

__declspec(dllexport) void push_fs_short() {
	short_stack_func(
#if __x86_64__
		0, 0, 0, 0,
#endif
		FS
	);
}

__declspec(dllexport) void push_fs_int() {
	int_stack_func(
#if __x86_64__
		0, 0, 0, 0,
#endif
		FS
	);
}

__declspec(dllexport) void push_fs_long() {
	long_stack_func(
#if __x86_64__
		0, 0, 0, 0,
#endif
		FS
	);
}

#endif
