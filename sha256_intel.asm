.set @feat.00, 1
.intel_syntax
.global sha256_sse4

PSHUFFLE_BYTE_FLIP_MASK:

_SHUF_00BA:

_SHUF_DC00:


sha256_sse4:
	PUSH RBX
	PUSH RSI
	PUSH RDI
	PUSH RBP
	PUSH R13
	PUSH R14
	PUSH R15
	SUB RSP, 
	MOVDQA XMMWORD PTR [RSP+], XMM6
	MOVDQA XMMWORD PTR [RSP++0x10], XMM7
	MOVDQA XMMWORD PTR [RSP++0x20], XMM8
	MOVDQA XMMWORD PTR [RSP++0x30], XMM9
	MOVDQA XMMWORD PTR [RSP++0x40], XMM10
	MOVDQA XMMWORD PTR [RSP++0x50], XMM11
	MOVDQA XMMWORD PTR [RSP++0x60], XMM12
	SHL R8, 0x6
	JZ done_hash
	ADD R8, RCX
	MOV QWORD PTR [RSP], R8
	MOV EAX, DWORD PTR [RDX]
	MOV EBX, DWORD PTR [RDX+0x4]
	MOV EDI, DWORD PTR [RDX+0x8]
	MOV ESI, DWORD PTR [RDX+0xC]
	MOV R8D, DWORD PTR [RDX+0x10]
	MOV R9D, DWORD PTR [RDX+0x14]
	MOV R10D, DWORD PTR [RDX+0x18]
	MOV R11D, DWORD PTR [RDX+0x1C]
	MOVDQA XMM12, XMMWORD PTR [PSHUFFLE_BYTE_FLIP_MASK]
	MOVDQA XMM10, XMMWORD PTR [_SHUF_00BA]
	MOVDQA XMM11, XMMWORD PTR [_SHUF_DC00]
	
loop0:
	LEA RBP, [K256]
	
	MOVDQU XMM4, XMMWORD PTR [RCX]
	PSHUFB XMM4, XMM12
	MOVDQU XMM5, XMMWORD PTR [RCX+0x10]
	PSHUFB XMM5, XMM12
	MOVDQU XMM6, XMMWORD PTR [RCX+0x20]
	PSHUFB XMM6, XMM12
	MOVDQU XMM7, XMMWORD PTR [RCX+0x30]
	PSHUFB XMM7, XMM12
	MOV QWORD PTR [RSP+0x8], RCX
	
	MOV ECX, 0x3
loop1:
	MOVDQA XMM9, XMMWORD PTR [RBP]
	PADDD XMM9, XMM4
	MOVDQA XMMWORD PTR [RSP+0x10], XMM9
	
	MOVDQA XMM0, XMM7
	MOV R13D, R8D
	ROR R13D, 0xE
	MOV R14D, EAX
	PALIGNR XMM0, XMM6, 0x4
	ROR R14D, 0x9
	XOR R13D, R8D
	MOV R15D, R9D
	ROR R13D, 0x5
	MOVDQA XMM1, XMM5
	XOR R14D, EAX
	XOR R15D, R10D
	PADDD XMM0, XMM4
	XOR R13D, R8D
	AND R15D, R8D
	ROR R14D, 0xB
	PALIGNR XMM1, XMM4, 0x4
	XOR R14D, EAX
	ROR R13D, 0x6
	XOR R15D, R10D
	MOVDQA XMM2, XMM1
	ROR R14D, 0x2
	ADD R15D, R13D
	ADD R15D, DWORD PTR [RSP+0x10]
	MOVDQA XMM3, XMM1
	MOV R13D, EAX
	ADD R11D, R15D
	MOV R15D, EAX
	PSLLD XMM1, 0x19
	OR R13D, EDI
	ADD ESI, R11D
	ADD R15D, EDI
	PSRLD XMM2, 0x7
	AND R13D, EBX
	ADD R11D, R14D
	POR XMM1, XMM2
	OR R13D, R15D
	ADD R11D, R13D
	
	MOVDQA XMM2, XMM3
	MOV R13D, ESI
	MOV R14D, R11D
	MOVDQA XMM8, XMM3
	ROR R13D, 0xE
	XOR R13D, ESI
	MOV R15D, R8D
	ROR R14D, 0x9
	PSLLD XMM3, 0xE
	XOR R14D, R11D
	ROR R13D, 0x5
	XOR R15D, R9D
	PSRLD XMM2, 0x12
	ROR R14D, 0xB
	XOR R13D, ESI
	AND R15D, ESI
	ROR R13D, 0x6
	PXOR XMM1, XMM3
	XOR R14D, R11D
	XOR R15D, R9D
	PSRLD XMM8, 0x3
	ADD R15D, R13D
	ADD R15D, DWORD PTR [RSP+0x14]
	ROR R14D, 0x2
	PXOR XMM1, XMM2
	MOV R13D, R11D
	ADD R10D, R15D
	MOV R15D, R11D
	PXOR XMM1, XMM8
	OR R13D, EBX
	ADD EDI, R10D
	AND R15D, EBX
	
	PSHUFD XMM2, XMM7, 0xFA
	AND R13D, EAX
	ADD R10D, R14D
	PADDD XMM0, XMM1
	OR R13D, R15D
	ADD R10D, R13D
	
	MOVDQA XMM3, XMM2
	MOV R13D, EDI
	MOV R14D, R10D
	ROR R13D, 0xE
	MOVDQA XMM8, XMM2
	XOR R13D, EDI
	ROR R14D, 0x9
	MOV R15D, ESI
	XOR R14D, R10D
	ROR R13D, 0x5
	PSRLQ XMM2, 0x11
	XOR R15D, R8D
	PSRLQ XMM3, 0x13
	XOR R13D, EDI
	AND R15D, EDI
	PSRLD XMM8, 0xA
	ROR R14D, 0xB
	XOR R14D, R10D
	XOR R15D, R8D
	ROR R13D, 0x6
	PXOR XMM2, XMM3
	ADD R15D, R13D
	ROR R14D, 0x2
	ADD R15D, DWORD PTR [RSP+0x18]
	PXOR XMM8, XMM2
	MOV R13D, R10D
	ADD R9D, R15D
	MOV R15D, R10D
	PSHUFB XMM8, XMM10
	OR R13D, EAX
	ADD EBX, R9D
	AND R15D, EAX
	PADDD XMM0, XMM8
	AND R13D, R11D
	ADD R9D, R14D
	
	PSHUFD XMM2, XMM0, 0x50
	OR R13D, R15D
	ADD R9D, R13D
	
	MOVDQA XMM3, XMM2
	MOV R13D, EBX
	ROR R13D, 0xE
	MOV R14D, R9D
	